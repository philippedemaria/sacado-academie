# Generated by Django 3.0.5 on 2022-09-23 08:31

import account.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import tool.models


class Migration(migrations.Migration):

    dependencies = [
        ('socle', '0007_subject_is_active'),
        ('account', '0028_teacher_tarif'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tool', '0018_tool_levels'),
    ]

    operations = [
        migrations.CreateModel(
            name='Positionnement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, default=account.models.generate_code, max_length=100, unique=True, verbose_name='Code')),
                ('title', models.CharField(max_length=255, verbose_name='Titre du test de positionnement')),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('vignette', models.ImageField(blank=True, default='', null=True, upload_to=tool.models.quizz_directory_path, verbose_name="Vignette d'accueil")),
                ('is_publish', models.BooleanField(default=0, verbose_name='Publié ?')),
                ('is_back', models.BooleanField(default=0, verbose_name='Retour arrière ?')),
                ('is_ranking', models.BooleanField(default=0, verbose_name='Ordre aléatoire des questions ?')),
                ('is_shuffle', models.BooleanField(default=0, verbose_name='Ordre aléatoire des réponses ?')),
                ('level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='positionnements', to='socle.Level')),
                ('questions', models.ManyToManyField(blank=True, editable=False, related_name='positionnements', to='tool.Question')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='positionnements', to='socle.Subject')),
                ('teacher', models.ForeignKey(blank=True, editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='positionnements', to='account.Teacher')),
                ('users', models.ManyToManyField(blank=True, editable=False, related_name='positionnements', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
