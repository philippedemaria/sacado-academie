# Generated by Django 3.0.5 on 2021-10-15 16:56

import bibliotex.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('qcm', '0016_auto_20211002_1650'),
        ('group', '0004_auto_20210919_1915'),
        ('account', '0008_remove_teacher_helping'),
        ('socle', '0006_auto_20211006_2229'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bibliotex',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Titre')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_modified', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('vignette', models.ImageField(blank=True, default='', null=True, upload_to=bibliotex.models.image_directory_path, verbose_name="Vignette d'accueil")),
                ('is_favorite', models.BooleanField(default=0, verbose_name='Favori ?')),
                ('is_share', models.BooleanField(default=0, verbose_name='Mutualisé ?')),
                ('is_archive', models.BooleanField(default=0, verbose_name='Archivé ?')),
                ('is_publish', models.BooleanField(default=0, verbose_name='Publié ?')),
                ('start', models.DateTimeField(blank=True, null=True, verbose_name='A partir de')),
                ('stop', models.DateTimeField(blank=True, null=True, verbose_name='Date de verrouillage')),
                ('author', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='author_bibliotexs', to='account.Teacher')),
                ('coteachers', models.ManyToManyField(editable=False, related_name='coteachers_bibliotexs', to='account.Teacher')),
            ],
        ),
        migrations.CreateModel(
            name='Exotex',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Titre')),
                ('content', models.TextField(verbose_name='Enoncé en LaTeX')),
                ('calculator', models.BooleanField(default=0, verbose_name='Calculatrice ?')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_modified', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('duration', models.PositiveIntegerField(blank=True, default=15, verbose_name='Durée estimée - en minutes')),
                ('is_share', models.BooleanField(default=1, verbose_name='Mutualisé ?')),
                ('is_python', models.BooleanField(default=0, verbose_name='Python ?')),
                ('is_scratch', models.BooleanField(default=0, verbose_name='Scratch ?')),
                ('is_corrected', models.BooleanField(default=0, verbose_name='Correction ?')),
                ('correction', models.TextField(blank=True, default='', null=True, verbose_name='Corrigé')),
                ('author', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='author_exotexs', to='account.Teacher')),
                ('knowledge', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='knowledge_exotexs', to='socle.Knowledge', verbose_name='Savoir faire associé')),
                ('knowledges', models.ManyToManyField(related_name='other_knowledge_exotexs', to='socle.Knowledge', verbose_name='Savoir faire associés complémentaires')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='level_exotexs', to='socle.Level', verbose_name='Niveau')),
                ('skills', models.ManyToManyField(blank=True, related_name='skills_exotexs', to='socle.Skill', verbose_name='Compétences ciblées')),
                ('theme', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='theme_exotexs', to='socle.Theme', verbose_name='Thème')),
            ],
        ),
        migrations.CreateModel(
            name='Relationtex',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calculator', models.BooleanField(default=0, verbose_name='Calculatrice ?')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_modified', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('duration', models.PositiveIntegerField(blank=True, default=15, verbose_name='Durée estimée - en minutes')),
                ('is_python', models.BooleanField(default=0, verbose_name='Python ?')),
                ('is_scratch', models.BooleanField(default=0, verbose_name='Scratch ?')),
                ('is_publish', models.BooleanField(default=0, verbose_name='Publié ?')),
                ('start', models.DateTimeField(blank=True, null=True, verbose_name='A partir de')),
                ('stop', models.DateTimeField(blank=True, null=True, verbose_name='Date de verrouillage')),
                ('ranking', models.PositiveIntegerField(blank=True, default=0, editable=False, null=True)),
                ('content_cor', models.TextField(blank=True, default='', null=True, verbose_name='Enoncé')),
                ('is_publish_cor', models.BooleanField(default=0, verbose_name='Publié ?')),
                ('bibliotex', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='relationtexs', to='bibliotex.Bibliotex')),
                ('courses', models.ManyToManyField(blank=True, related_name='relationtexs', to='qcm.Course', verbose_name='Cours éventuel')),
                ('exotex', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='relationtexs', to='bibliotex.Exotex')),
                ('knowledges', models.ManyToManyField(related_name='relationtexs', to='socle.Knowledge', verbose_name='Savoir faire associés complémentaires')),
                ('skills', models.ManyToManyField(blank=True, related_name='relationtexs', to='socle.Skill', verbose_name='Compétences ciblées')),
                ('students', models.ManyToManyField(editable=False, related_name='relationtexs', to='account.Student')),
                ('teacher', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='teacher_relationtexs', to='account.Teacher')),
            ],
        ),
        migrations.AddField(
            model_name='bibliotex',
            name='exotexs',
            field=models.ManyToManyField(editable=False, related_name='bibliotexs', through='bibliotex.Relationtex', to='bibliotex.Exotex'),
        ),
        migrations.AddField(
            model_name='bibliotex',
            name='folders',
            field=models.ManyToManyField(blank=True, editable=False, related_name='bibliotexs', to='qcm.Folder'),
        ),
        migrations.AddField(
            model_name='bibliotex',
            name='groups',
            field=models.ManyToManyField(blank=True, related_name='bibliotexs', to='group.Group', verbose_name='Groupe éventuel'),
        ),
        migrations.AddField(
            model_name='bibliotex',
            name='levels',
            field=models.ManyToManyField(editable=False, related_name='bibliotexs', to='socle.Level'),
        ),
        migrations.AddField(
            model_name='bibliotex',
            name='students',
            field=models.ManyToManyField(editable=False, related_name='bibliotexs', to='account.Student'),
        ),
        migrations.AddField(
            model_name='bibliotex',
            name='subjects',
            field=models.ManyToManyField(editable=False, related_name='bibliotexs', to='socle.Subject'),
        ),
        migrations.AddField(
            model_name='bibliotex',
            name='teacher',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='teacher_bibliotexs', to='account.Teacher'),
        ),
    ]
